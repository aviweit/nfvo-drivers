/*
 * OSM NB API featuring ETSI NFV SOL005
 * This is Open Source MANO Northbound API featuring ETSI NFV SOL005. For more information on OSM, you can visit [http://osm.etsi.org](http://osm.etsi.org). You can send us your comments and questions to OSM_TECH@list.etsi.org or join the [OpenSourceMANO Slack Workplace](https://join.slack.com/t/opensourcemano/shared_invite/enQtMzQ3MzYzNTQ0NDIyLWVkNTE4ZjZjNWI0ZTQyN2VhOTI1MjViMzU1NWYwMWM3ODI4NTQyY2VlODA2ZjczMWIyYTFkZWNiZmFkM2M2ZDk) 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: OSM_TECH@list.etsi.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
/**
 * InstantiateNsiRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-12-04T13:03:17.599+01:00[Europe/Rome]")
public class InstantiateNsiRequest {
  @SerializedName("nsiName")
  private String nsiName = null;

  @SerializedName("nstId")
  private UUID nstId = null;

  @SerializedName("vimAccountId")
  private UUID vimAccountId = null;

  public InstantiateNsiRequest nsiName(String nsiName) {
    this.nsiName = nsiName;
    return this;
  }

   /**
   * Human-readable name of the NetSlice instance to be created. 
   * @return nsiName
  **/
  @Schema(required = true, description = "Human-readable name of the NetSlice instance to be created. ")
  public String getNsiName() {
    return nsiName;
  }

  public void setNsiName(String nsiName) {
    this.nsiName = nsiName;
  }

  public InstantiateNsiRequest nstId(UUID nstId) {
    this.nstId = nstId;
    return this;
  }

   /**
   * Identifier of the NST that defines the NetSlice instance to be created. 
   * @return nstId
  **/
  @Schema(required = true, description = "Identifier of the NST that defines the NetSlice instance to be created. ")
  public UUID getNstId() {
    return nstId;
  }

  public void setNstId(UUID nstId) {
    this.nstId = nstId;
  }

  public InstantiateNsiRequest vimAccountId(UUID vimAccountId) {
    this.vimAccountId = vimAccountId;
    return this;
  }

   /**
   * Identifier of the VIM Account where the NetSlice instance shall be created. 
   * @return vimAccountId
  **/
  @Schema(required = true, description = "Identifier of the VIM Account where the NetSlice instance shall be created. ")
  public UUID getVimAccountId() {
    return vimAccountId;
  }

  public void setVimAccountId(UUID vimAccountId) {
    this.vimAccountId = vimAccountId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstantiateNsiRequest instantiateNsiRequest = (InstantiateNsiRequest) o;
    return Objects.equals(this.nsiName, instantiateNsiRequest.nsiName) &&
        Objects.equals(this.nstId, instantiateNsiRequest.nstId) &&
        Objects.equals(this.vimAccountId, instantiateNsiRequest.vimAccountId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nsiName, nstId, vimAccountId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstantiateNsiRequest {\n");
    
    sb.append("    nsiName: ").append(toIndentedString(nsiName)).append("\n");
    sb.append("    nstId: ").append(toIndentedString(nstId)).append("\n");
    sb.append("    vimAccountId: ").append(toIndentedString(vimAccountId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
