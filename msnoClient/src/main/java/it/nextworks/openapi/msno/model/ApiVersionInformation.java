/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.nextworks.openapi.msno.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import it.nextworks.openapi.msno.model.ApiVersionInformationApiVersions;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * This type represents API version information. 
 */
@ApiModel(description = "This type represents API version information. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-08T16:52:33.422+01:00")
public class ApiVersionInformation {
  @SerializedName("uriPrefix")
  private String uriPrefix = null;

  @SerializedName("apiVersions")
  private List<ApiVersionInformationApiVersions> apiVersions = new ArrayList<ApiVersionInformationApiVersions>();

  public ApiVersionInformation uriPrefix(String uriPrefix) {
    this.uriPrefix = uriPrefix;
    return this;
  }

   /**
   * Specifies the URI prefix for the API, in the following form {apiRoot}/{apiName}/{apiMajorVersion}/. 
   * @return uriPrefix
  **/
  @ApiModelProperty(required = true, value = "Specifies the URI prefix for the API, in the following form {apiRoot}/{apiName}/{apiMajorVersion}/. ")
  public String getUriPrefix() {
    return uriPrefix;
  }

  public void setUriPrefix(String uriPrefix) {
    this.uriPrefix = uriPrefix;
  }

  public ApiVersionInformation apiVersions(List<ApiVersionInformationApiVersions> apiVersions) {
    this.apiVersions = apiVersions;
    return this;
  }

  public ApiVersionInformation addApiVersionsItem(ApiVersionInformationApiVersions apiVersionsItem) {
    this.apiVersions.add(apiVersionsItem);
    return this;
  }

   /**
   * Version(s) supported for the API signalled by the uriPrefix attribute. 
   * @return apiVersions
  **/
  @ApiModelProperty(required = true, value = "Version(s) supported for the API signalled by the uriPrefix attribute. ")
  public List<ApiVersionInformationApiVersions> getApiVersions() {
    return apiVersions;
  }

  public void setApiVersions(List<ApiVersionInformationApiVersions> apiVersions) {
    this.apiVersions = apiVersions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiVersionInformation apiVersionInformation = (ApiVersionInformation) o;
    return Objects.equals(this.uriPrefix, apiVersionInformation.uriPrefix) &&
        Objects.equals(this.apiVersions, apiVersionInformation.apiVersions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uriPrefix, apiVersions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiVersionInformation {\n");
    
    sb.append("    uriPrefix: ").append(toIndentedString(uriPrefix)).append("\n");
    sb.append("    apiVersions: ").append(toIndentedString(apiVersions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

