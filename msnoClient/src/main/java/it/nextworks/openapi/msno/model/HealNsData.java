/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.nextworks.openapi.msno.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import it.nextworks.openapi.msno.model.KeyValuePairs;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * This type represents the information used to heal a NS. It shall comply with the provisions defined in Table 6.5.3.43-1. 
 */
@ApiModel(description = "This type represents the information used to heal a NS. It shall comply with the provisions defined in Table 6.5.3.43-1. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-08T16:52:33.422+01:00")
public class HealNsData {
  /**
   * Indicates the degree of healing. Possible values include: - HEAL_RESTORE: Complete the healing of the NS restoring the state of the NS before the failure occurred - HEAL_QOS: Complete the healing of the NS based on the newest QoS values - HEAL_RESET: Complete the healing of the NS resetting to the original instantiation state of the NS - PARTIAL_HEALING 
   */
  @JsonAdapter(DegreeHealingEnum.Adapter.class)
  public enum DegreeHealingEnum {
    HEAL_RESTORE("HEAL_RESTORE"),
    
    HEAL_QOS("HEAL_QOS"),
    
    HEAL_RESET("HEAL_RESET"),
    
    PARTIAL_HEALING("PARTIAL_HEALING");

    private String value;

    DegreeHealingEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DegreeHealingEnum fromValue(String text) {
      for (DegreeHealingEnum b : DegreeHealingEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DegreeHealingEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DegreeHealingEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DegreeHealingEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DegreeHealingEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("degreeHealing")
  private DegreeHealingEnum degreeHealing = null;

  @SerializedName("actionsHealing")
  private List<String> actionsHealing = null;

  @SerializedName("healScript")
  private String healScript = null;

  @SerializedName("additionalParamsforNs")
  private KeyValuePairs additionalParamsforNs = null;

  public HealNsData degreeHealing(DegreeHealingEnum degreeHealing) {
    this.degreeHealing = degreeHealing;
    return this;
  }

   /**
   * Indicates the degree of healing. Possible values include: - HEAL_RESTORE: Complete the healing of the NS restoring the state of the NS before the failure occurred - HEAL_QOS: Complete the healing of the NS based on the newest QoS values - HEAL_RESET: Complete the healing of the NS resetting to the original instantiation state of the NS - PARTIAL_HEALING 
   * @return degreeHealing
  **/
  @ApiModelProperty(required = true, value = "Indicates the degree of healing. Possible values include: - HEAL_RESTORE: Complete the healing of the NS restoring the state of the NS before the failure occurred - HEAL_QOS: Complete the healing of the NS based on the newest QoS values - HEAL_RESET: Complete the healing of the NS resetting to the original instantiation state of the NS - PARTIAL_HEALING ")
  public DegreeHealingEnum getDegreeHealing() {
    return degreeHealing;
  }

  public void setDegreeHealing(DegreeHealingEnum degreeHealing) {
    this.degreeHealing = degreeHealing;
  }

  public HealNsData actionsHealing(List<String> actionsHealing) {
    this.actionsHealing = actionsHealing;
    return this;
  }

  public HealNsData addActionsHealingItem(String actionsHealingItem) {
    if (this.actionsHealing == null) {
      this.actionsHealing = new ArrayList<String>();
    }
    this.actionsHealing.add(actionsHealingItem);
    return this;
  }

   /**
   * Used to specify dedicated healing actions in a particular order (e.g. as a script). The actionsHealing attribute can be used to provide a specific script whose content and actions might only be possible to be derived during runtime. 
   * @return actionsHealing
  **/
  @ApiModelProperty(value = "Used to specify dedicated healing actions in a particular order (e.g. as a script). The actionsHealing attribute can be used to provide a specific script whose content and actions might only be possible to be derived during runtime. ")
  public List<String> getActionsHealing() {
    return actionsHealing;
  }

  public void setActionsHealing(List<String> actionsHealing) {
    this.actionsHealing = actionsHealing;
  }

  public HealNsData healScript(String healScript) {
    this.healScript = healScript;
    return this;
  }

   /**
   * Reference to a script from the NSD that shall be used to execute dedicated healing actions in a particular order. The healScript, since it refers to a script in the NSD, can be used to execute healing actions which are defined during NS design time. 
   * @return healScript
  **/
  @ApiModelProperty(value = "Reference to a script from the NSD that shall be used to execute dedicated healing actions in a particular order. The healScript, since it refers to a script in the NSD, can be used to execute healing actions which are defined during NS design time. ")
  public String getHealScript() {
    return healScript;
  }

  public void setHealScript(String healScript) {
    this.healScript = healScript;
  }

  public HealNsData additionalParamsforNs(KeyValuePairs additionalParamsforNs) {
    this.additionalParamsforNs = additionalParamsforNs;
    return this;
  }

   /**
   * Allows the OSS/BSS to provide additional parameter(s) to the healing process at the NS level. 
   * @return additionalParamsforNs
  **/
  @ApiModelProperty(value = "Allows the OSS/BSS to provide additional parameter(s) to the healing process at the NS level. ")
  public KeyValuePairs getAdditionalParamsforNs() {
    return additionalParamsforNs;
  }

  public void setAdditionalParamsforNs(KeyValuePairs additionalParamsforNs) {
    this.additionalParamsforNs = additionalParamsforNs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HealNsData healNsData = (HealNsData) o;
    return Objects.equals(this.degreeHealing, healNsData.degreeHealing) &&
        Objects.equals(this.actionsHealing, healNsData.actionsHealing) &&
        Objects.equals(this.healScript, healNsData.healScript) &&
        Objects.equals(this.additionalParamsforNs, healNsData.additionalParamsforNs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(degreeHealing, actionsHealing, healScript, additionalParamsforNs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HealNsData {\n");
    
    sb.append("    degreeHealing: ").append(toIndentedString(degreeHealing)).append("\n");
    sb.append("    actionsHealing: ").append(toIndentedString(actionsHealing)).append("\n");
    sb.append("    healScript: ").append(toIndentedString(healScript)).append("\n");
    sb.append("    additionalParamsforNs: ").append(toIndentedString(additionalParamsforNs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

