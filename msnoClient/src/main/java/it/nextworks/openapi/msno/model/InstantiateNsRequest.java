/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.nextworks.openapi.msno.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import it.nextworks.openapi.msno.model.AddPnfData;
import it.nextworks.openapi.msno.model.AffinityOrAntiAffinityRule;
import it.nextworks.openapi.msno.model.KeyValuePairs;
import it.nextworks.openapi.msno.model.NestedNsInstanceData;
import it.nextworks.openapi.msno.model.ParamsForNestedNs;
import it.nextworks.openapi.msno.model.ParamsForVnf;
import it.nextworks.openapi.msno.model.SapData;
import it.nextworks.openapi.msno.model.VnfInstanceData;
import it.nextworks.openapi.msno.model.VnfLocationConstraint;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * InstantiateNsRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-08T16:52:33.422+01:00")
public class InstantiateNsRequest {
  @SerializedName("nsFlavourId")
  private String nsFlavourId = null;

  @SerializedName("sapData")
  private List<SapData> sapData = null;

  @SerializedName("addpnfData")
  private List<AddPnfData> addpnfData = null;

  @SerializedName("vnfInstanceData")
  private List<VnfInstanceData> vnfInstanceData = null;

  @SerializedName("nestedNsInstanceData")
  private List<NestedNsInstanceData> nestedNsInstanceData = null;

  @SerializedName("localizationLanguage")
  private List<VnfLocationConstraint> localizationLanguage = null;

  @SerializedName("additionalParamsForNs")
  private KeyValuePairs additionalParamsForNs = null;

  @SerializedName("additionalParamForNestedNs")
  private List<ParamsForNestedNs> additionalParamForNestedNs = null;

  @SerializedName("additionalParamsForVnf")
  private List<ParamsForVnf> additionalParamsForVnf = null;

  @SerializedName("startTime")
  private String startTime = null;

  @SerializedName("nsInstantiationLevelId")
  private String nsInstantiationLevelId = null;

  @SerializedName("additionalAffinityOrAntiAffinityRule")
  private List<AffinityOrAntiAffinityRule> additionalAffinityOrAntiAffinityRule = null;

  public InstantiateNsRequest nsFlavourId(String nsFlavourId) {
    this.nsFlavourId = nsFlavourId;
    return this;
  }

   /**
   * Identifier of the NS deployment flavor to be instantiated. 
   * @return nsFlavourId
  **/
  @ApiModelProperty(required = true, value = "Identifier of the NS deployment flavor to be instantiated. ")
  public String getNsFlavourId() {
    return nsFlavourId;
  }

  public void setNsFlavourId(String nsFlavourId) {
    this.nsFlavourId = nsFlavourId;
  }

  public InstantiateNsRequest sapData(List<SapData> sapData) {
    this.sapData = sapData;
    return this;
  }

  public InstantiateNsRequest addSapDataItem(SapData sapDataItem) {
    if (this.sapData == null) {
      this.sapData = new ArrayList<SapData>();
    }
    this.sapData.add(sapDataItem);
    return this;
  }

   /**
   * Create data concerning the SAPs of this NS. 
   * @return sapData
  **/
  @ApiModelProperty(value = "Create data concerning the SAPs of this NS. ")
  public List<SapData> getSapData() {
    return sapData;
  }

  public void setSapData(List<SapData> sapData) {
    this.sapData = sapData;
  }

  public InstantiateNsRequest addpnfData(List<AddPnfData> addpnfData) {
    this.addpnfData = addpnfData;
    return this;
  }

  public InstantiateNsRequest addAddpnfDataItem(AddPnfData addpnfDataItem) {
    if (this.addpnfData == null) {
      this.addpnfData = new ArrayList<AddPnfData>();
    }
    this.addpnfData.add(addpnfDataItem);
    return this;
  }

   /**
   * Information on the PNF(s) that are part of this NS. 
   * @return addpnfData
  **/
  @ApiModelProperty(value = "Information on the PNF(s) that are part of this NS. ")
  public List<AddPnfData> getAddpnfData() {
    return addpnfData;
  }

  public void setAddpnfData(List<AddPnfData> addpnfData) {
    this.addpnfData = addpnfData;
  }

  public InstantiateNsRequest vnfInstanceData(List<VnfInstanceData> vnfInstanceData) {
    this.vnfInstanceData = vnfInstanceData;
    return this;
  }

  public InstantiateNsRequest addVnfInstanceDataItem(VnfInstanceData vnfInstanceDataItem) {
    if (this.vnfInstanceData == null) {
      this.vnfInstanceData = new ArrayList<VnfInstanceData>();
    }
    this.vnfInstanceData.add(vnfInstanceDataItem);
    return this;
  }

   /**
   * Specify an existing VNF instance to be used in the NS. If needed, the VNF Profile to be used for this VNF instance is also provided. The DF of the VNF instance shall match the VNF DF present in the associated VNF Profile. 
   * @return vnfInstanceData
  **/
  @ApiModelProperty(value = "Specify an existing VNF instance to be used in the NS. If needed, the VNF Profile to be used for this VNF instance is also provided. The DF of the VNF instance shall match the VNF DF present in the associated VNF Profile. ")
  public List<VnfInstanceData> getVnfInstanceData() {
    return vnfInstanceData;
  }

  public void setVnfInstanceData(List<VnfInstanceData> vnfInstanceData) {
    this.vnfInstanceData = vnfInstanceData;
  }

  public InstantiateNsRequest nestedNsInstanceData(List<NestedNsInstanceData> nestedNsInstanceData) {
    this.nestedNsInstanceData = nestedNsInstanceData;
    return this;
  }

  public InstantiateNsRequest addNestedNsInstanceDataItem(NestedNsInstanceData nestedNsInstanceDataItem) {
    if (this.nestedNsInstanceData == null) {
      this.nestedNsInstanceData = new ArrayList<NestedNsInstanceData>();
    }
    this.nestedNsInstanceData.add(nestedNsInstanceDataItem);
    return this;
  }

   /**
   * Specify an existing NS instance to be used as a nested NS within the NS. If needed, the NS Profile to be used for this nested NS instance is also provided. NOTE 2: The NS DF of each nested NS shall be one of the allowed flavours in the associated NSD (as referenced in the nestedNsd attribute of the NSD of the NS to be instantiated). NOTE 3: The NSD of each referenced NSs (i.e. each nestedInstanceId) shall match the one of the nested NSD in the composite NSD. 
   * @return nestedNsInstanceData
  **/
  @ApiModelProperty(value = "Specify an existing NS instance to be used as a nested NS within the NS. If needed, the NS Profile to be used for this nested NS instance is also provided. NOTE 2: The NS DF of each nested NS shall be one of the allowed flavours in the associated NSD (as referenced in the nestedNsd attribute of the NSD of the NS to be instantiated). NOTE 3: The NSD of each referenced NSs (i.e. each nestedInstanceId) shall match the one of the nested NSD in the composite NSD. ")
  public List<NestedNsInstanceData> getNestedNsInstanceData() {
    return nestedNsInstanceData;
  }

  public void setNestedNsInstanceData(List<NestedNsInstanceData> nestedNsInstanceData) {
    this.nestedNsInstanceData = nestedNsInstanceData;
  }

  public InstantiateNsRequest localizationLanguage(List<VnfLocationConstraint> localizationLanguage) {
    this.localizationLanguage = localizationLanguage;
    return this;
  }

  public InstantiateNsRequest addLocalizationLanguageItem(VnfLocationConstraint localizationLanguageItem) {
    if (this.localizationLanguage == null) {
      this.localizationLanguage = new ArrayList<VnfLocationConstraint>();
    }
    this.localizationLanguage.add(localizationLanguageItem);
    return this;
  }

   /**
   * Defines the location constraints for the VNF to be instantiated as part of the NS instantiation. An example can be a constraint for the VNF to be in a specific geographic location.. 
   * @return localizationLanguage
  **/
  @ApiModelProperty(value = "Defines the location constraints for the VNF to be instantiated as part of the NS instantiation. An example can be a constraint for the VNF to be in a specific geographic location.. ")
  public List<VnfLocationConstraint> getLocalizationLanguage() {
    return localizationLanguage;
  }

  public void setLocalizationLanguage(List<VnfLocationConstraint> localizationLanguage) {
    this.localizationLanguage = localizationLanguage;
  }

  public InstantiateNsRequest additionalParamsForNs(KeyValuePairs additionalParamsForNs) {
    this.additionalParamsForNs = additionalParamsForNs;
    return this;
  }

   /**
   * Allows the OSS/BSS to provide additional parameter(s) at the composite NS level (as opposed to the VNF level, which is covered in additionalParamsForVnf), and as opposed to the nested NS level, which is covered in additionalParamForNestedNs. 
   * @return additionalParamsForNs
  **/
  @ApiModelProperty(value = "Allows the OSS/BSS to provide additional parameter(s) at the composite NS level (as opposed to the VNF level, which is covered in additionalParamsForVnf), and as opposed to the nested NS level, which is covered in additionalParamForNestedNs. ")
  public KeyValuePairs getAdditionalParamsForNs() {
    return additionalParamsForNs;
  }

  public void setAdditionalParamsForNs(KeyValuePairs additionalParamsForNs) {
    this.additionalParamsForNs = additionalParamsForNs;
  }

  public InstantiateNsRequest additionalParamForNestedNs(List<ParamsForNestedNs> additionalParamForNestedNs) {
    this.additionalParamForNestedNs = additionalParamForNestedNs;
    return this;
  }

  public InstantiateNsRequest addAdditionalParamForNestedNsItem(ParamsForNestedNs additionalParamForNestedNsItem) {
    if (this.additionalParamForNestedNs == null) {
      this.additionalParamForNestedNs = new ArrayList<ParamsForNestedNs>();
    }
    this.additionalParamForNestedNs.add(additionalParamForNestedNsItem);
    return this;
  }

   /**
   * Allows the OSS/BSS to provide additional parameter(s) per nested NS instance (as opposed to the composite NS level, which is covered in additionalParamForNs, and as opposed to the VNF level, which is covered in additionalParamForVnf). This is for nested NS instances that are to be created by the NFVO as part of the NS instantiation and not for existing nested NS instances that are referenced for reuse. 
   * @return additionalParamForNestedNs
  **/
  @ApiModelProperty(value = "Allows the OSS/BSS to provide additional parameter(s) per nested NS instance (as opposed to the composite NS level, which is covered in additionalParamForNs, and as opposed to the VNF level, which is covered in additionalParamForVnf). This is for nested NS instances that are to be created by the NFVO as part of the NS instantiation and not for existing nested NS instances that are referenced for reuse. ")
  public List<ParamsForNestedNs> getAdditionalParamForNestedNs() {
    return additionalParamForNestedNs;
  }

  public void setAdditionalParamForNestedNs(List<ParamsForNestedNs> additionalParamForNestedNs) {
    this.additionalParamForNestedNs = additionalParamForNestedNs;
  }

  public InstantiateNsRequest additionalParamsForVnf(List<ParamsForVnf> additionalParamsForVnf) {
    this.additionalParamsForVnf = additionalParamsForVnf;
    return this;
  }

  public InstantiateNsRequest addAdditionalParamsForVnfItem(ParamsForVnf additionalParamsForVnfItem) {
    if (this.additionalParamsForVnf == null) {
      this.additionalParamsForVnf = new ArrayList<ParamsForVnf>();
    }
    this.additionalParamsForVnf.add(additionalParamsForVnfItem);
    return this;
  }

   /**
   * Allows the OSS/BSS to provide additional parameter(s) per VNF instance (as opposed to the composite NS level, which is covered in additionalParamsForNs and as opposed to the nested NS level, which is covered in additionalParamForNestedNs). This is for VNFs that are to be created by the NFVO as part of the NS instantiation and not for existing VNF that are referenced for reuse. 
   * @return additionalParamsForVnf
  **/
  @ApiModelProperty(value = "Allows the OSS/BSS to provide additional parameter(s) per VNF instance (as opposed to the composite NS level, which is covered in additionalParamsForNs and as opposed to the nested NS level, which is covered in additionalParamForNestedNs). This is for VNFs that are to be created by the NFVO as part of the NS instantiation and not for existing VNF that are referenced for reuse. ")
  public List<ParamsForVnf> getAdditionalParamsForVnf() {
    return additionalParamsForVnf;
  }

  public void setAdditionalParamsForVnf(List<ParamsForVnf> additionalParamsForVnf) {
    this.additionalParamsForVnf = additionalParamsForVnf;
  }

  public InstantiateNsRequest startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Timestamp indicating the earliest time to instantiate the NS. Cardinality \&quot;0\&quot; indicates the NS instantiation takes place immediately. 
   * @return startTime
  **/
  @ApiModelProperty(value = "Timestamp indicating the earliest time to instantiate the NS. Cardinality \"0\" indicates the NS instantiation takes place immediately. ")
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public InstantiateNsRequest nsInstantiationLevelId(String nsInstantiationLevelId) {
    this.nsInstantiationLevelId = nsInstantiationLevelId;
    return this;
  }

   /**
   * Identifies one of the NS instantiation levels declared in the DF applicable to this NS instance. If not present, the default NS instantiation level as declared in the NSD shall be used. 
   * @return nsInstantiationLevelId
  **/
  @ApiModelProperty(value = "Identifies one of the NS instantiation levels declared in the DF applicable to this NS instance. If not present, the default NS instantiation level as declared in the NSD shall be used. ")
  public String getNsInstantiationLevelId() {
    return nsInstantiationLevelId;
  }

  public void setNsInstantiationLevelId(String nsInstantiationLevelId) {
    this.nsInstantiationLevelId = nsInstantiationLevelId;
  }

  public InstantiateNsRequest additionalAffinityOrAntiAffinityRule(List<AffinityOrAntiAffinityRule> additionalAffinityOrAntiAffinityRule) {
    this.additionalAffinityOrAntiAffinityRule = additionalAffinityOrAntiAffinityRule;
    return this;
  }

  public InstantiateNsRequest addAdditionalAffinityOrAntiAffinityRuleItem(AffinityOrAntiAffinityRule additionalAffinityOrAntiAffinityRuleItem) {
    if (this.additionalAffinityOrAntiAffinityRule == null) {
      this.additionalAffinityOrAntiAffinityRule = new ArrayList<AffinityOrAntiAffinityRule>();
    }
    this.additionalAffinityOrAntiAffinityRule.add(additionalAffinityOrAntiAffinityRuleItem);
    return this;
  }

   /**
   * Specifies additional affinity or anti-affinity constraint for the VNF instances to be instantiated as part of the NS instantiation. Shall not conflict with rules already specified in the NSD. 
   * @return additionalAffinityOrAntiAffinityRule
  **/
  @ApiModelProperty(value = "Specifies additional affinity or anti-affinity constraint for the VNF instances to be instantiated as part of the NS instantiation. Shall not conflict with rules already specified in the NSD. ")
  public List<AffinityOrAntiAffinityRule> getAdditionalAffinityOrAntiAffinityRule() {
    return additionalAffinityOrAntiAffinityRule;
  }

  public void setAdditionalAffinityOrAntiAffinityRule(List<AffinityOrAntiAffinityRule> additionalAffinityOrAntiAffinityRule) {
    this.additionalAffinityOrAntiAffinityRule = additionalAffinityOrAntiAffinityRule;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstantiateNsRequest instantiateNsRequest = (InstantiateNsRequest) o;
    return Objects.equals(this.nsFlavourId, instantiateNsRequest.nsFlavourId) &&
        Objects.equals(this.sapData, instantiateNsRequest.sapData) &&
        Objects.equals(this.addpnfData, instantiateNsRequest.addpnfData) &&
        Objects.equals(this.vnfInstanceData, instantiateNsRequest.vnfInstanceData) &&
        Objects.equals(this.nestedNsInstanceData, instantiateNsRequest.nestedNsInstanceData) &&
        Objects.equals(this.localizationLanguage, instantiateNsRequest.localizationLanguage) &&
        Objects.equals(this.additionalParamsForNs, instantiateNsRequest.additionalParamsForNs) &&
        Objects.equals(this.additionalParamForNestedNs, instantiateNsRequest.additionalParamForNestedNs) &&
        Objects.equals(this.additionalParamsForVnf, instantiateNsRequest.additionalParamsForVnf) &&
        Objects.equals(this.startTime, instantiateNsRequest.startTime) &&
        Objects.equals(this.nsInstantiationLevelId, instantiateNsRequest.nsInstantiationLevelId) &&
        Objects.equals(this.additionalAffinityOrAntiAffinityRule, instantiateNsRequest.additionalAffinityOrAntiAffinityRule);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nsFlavourId, sapData, addpnfData, vnfInstanceData, nestedNsInstanceData, localizationLanguage, additionalParamsForNs, additionalParamForNestedNs, additionalParamsForVnf, startTime, nsInstantiationLevelId, additionalAffinityOrAntiAffinityRule);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstantiateNsRequest {\n");
    
    sb.append("    nsFlavourId: ").append(toIndentedString(nsFlavourId)).append("\n");
    sb.append("    sapData: ").append(toIndentedString(sapData)).append("\n");
    sb.append("    addpnfData: ").append(toIndentedString(addpnfData)).append("\n");
    sb.append("    vnfInstanceData: ").append(toIndentedString(vnfInstanceData)).append("\n");
    sb.append("    nestedNsInstanceData: ").append(toIndentedString(nestedNsInstanceData)).append("\n");
    sb.append("    localizationLanguage: ").append(toIndentedString(localizationLanguage)).append("\n");
    sb.append("    additionalParamsForNs: ").append(toIndentedString(additionalParamsForNs)).append("\n");
    sb.append("    additionalParamForNestedNs: ").append(toIndentedString(additionalParamForNestedNs)).append("\n");
    sb.append("    additionalParamsForVnf: ").append(toIndentedString(additionalParamsForVnf)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    nsInstantiationLevelId: ").append(toIndentedString(nsInstantiationLevelId)).append("\n");
    sb.append("    additionalAffinityOrAntiAffinityRule: ").append(toIndentedString(additionalAffinityOrAntiAffinityRule)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

