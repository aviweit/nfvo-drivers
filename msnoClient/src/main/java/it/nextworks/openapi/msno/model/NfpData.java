/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.nextworks.openapi.msno.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import it.nextworks.openapi.msno.model.CpGroupInfo;
import it.nextworks.openapi.msno.model.NfpRule;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * This type contains information used to create or modify NFP instance parameters for the update of an existing VNFFG instance. It shall comply with the provisions defined in Table 6.5.3.38-1. 
 */
@ApiModel(description = "This type contains information used to create or modify NFP instance parameters for the update of an existing VNFFG instance. It shall comply with the provisions defined in Table 6.5.3.38-1. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-08T16:52:33.422+01:00")
public class NfpData {
  @SerializedName("nfpInfoId")
  private String nfpInfoId = null;

  @SerializedName("nfpName")
  private String nfpName = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("cpGroup")
  private List<CpGroupInfo> cpGroup = null;

  @SerializedName("nfpRule")
  private NfpRule nfpRule = null;

  public NfpData nfpInfoId(String nfpInfoId) {
    this.nfpInfoId = nfpInfoId;
    return this;
  }

   /**
   * Identifier of the NFP to be modified. It shall be present for modified NFPs and shall be absent for the new NFP. It shall be present for modified NFPs and shall be absent for the new NFP. 
   * @return nfpInfoId
  **/
  @ApiModelProperty(value = "Identifier of the NFP to be modified. It shall be present for modified NFPs and shall be absent for the new NFP. It shall be present for modified NFPs and shall be absent for the new NFP. ")
  public String getNfpInfoId() {
    return nfpInfoId;
  }

  public void setNfpInfoId(String nfpInfoId) {
    this.nfpInfoId = nfpInfoId;
  }

  public NfpData nfpName(String nfpName) {
    this.nfpName = nfpName;
    return this;
  }

   /**
   * Human readable name for the NFP. It shall be present for the new NFP, and it may be present otherwise. It shall be present for the new NFP, and it may be present otherwise. 
   * @return nfpName
  **/
  @ApiModelProperty(value = "Human readable name for the NFP. It shall be present for the new NFP, and it may be present otherwise. It shall be present for the new NFP, and it may be present otherwise. ")
  public String getNfpName() {
    return nfpName;
  }

  public void setNfpName(String nfpName) {
    this.nfpName = nfpName;
  }

  public NfpData description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Human readable description for the NFP. It shall be present for the new NFP, and it may be present otherwise. It shall be present for the new NFP, and it may be present otherwise. 
   * @return description
  **/
  @ApiModelProperty(value = "Human readable description for the NFP. It shall be present for the new NFP, and it may be present otherwise. It shall be present for the new NFP, and it may be present otherwise. ")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public NfpData cpGroup(List<CpGroupInfo> cpGroup) {
    this.cpGroup = cpGroup;
    return this;
  }

  public NfpData addCpGroupItem(CpGroupInfo cpGroupItem) {
    if (this.cpGroup == null) {
      this.cpGroup = new ArrayList<CpGroupInfo>();
    }
    this.cpGroup.add(cpGroupItem);
    return this;
  }

   /**
   * Group(s) of CPs and/or SAPs which the NFP passes by. Cardinality can be 0 if only updated or newly created NFP classification and selection rule which applied to an existing NFP is provided. At least a CP or an nfpRule shall be present. When multiple identifiers are included, the position of the identifier in the cpGroup value specifies the position of the group in the path. 
   * @return cpGroup
  **/
  @ApiModelProperty(value = "Group(s) of CPs and/or SAPs which the NFP passes by. Cardinality can be 0 if only updated or newly created NFP classification and selection rule which applied to an existing NFP is provided. At least a CP or an nfpRule shall be present. When multiple identifiers are included, the position of the identifier in the cpGroup value specifies the position of the group in the path. ")
  public List<CpGroupInfo> getCpGroup() {
    return cpGroup;
  }

  public void setCpGroup(List<CpGroupInfo> cpGroup) {
    this.cpGroup = cpGroup;
  }

  public NfpData nfpRule(NfpRule nfpRule) {
    this.nfpRule = nfpRule;
    return this;
  }

   /**
   * NFP classification and selection rule. See note 1. 
   * @return nfpRule
  **/
  @ApiModelProperty(value = "NFP classification and selection rule. See note 1. ")
  public NfpRule getNfpRule() {
    return nfpRule;
  }

  public void setNfpRule(NfpRule nfpRule) {
    this.nfpRule = nfpRule;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfpData nfpData = (NfpData) o;
    return Objects.equals(this.nfpInfoId, nfpData.nfpInfoId) &&
        Objects.equals(this.nfpName, nfpData.nfpName) &&
        Objects.equals(this.description, nfpData.description) &&
        Objects.equals(this.cpGroup, nfpData.cpGroup) &&
        Objects.equals(this.nfpRule, nfpData.nfpRule);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nfpInfoId, nfpName, description, cpGroup, nfpRule);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfpData {\n");
    
    sb.append("    nfpInfoId: ").append(toIndentedString(nfpInfoId)).append("\n");
    sb.append("    nfpName: ").append(toIndentedString(nfpName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    cpGroup: ").append(toIndentedString(cpGroup)).append("\n");
    sb.append("    nfpRule: ").append(toIndentedString(nfpRule)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

