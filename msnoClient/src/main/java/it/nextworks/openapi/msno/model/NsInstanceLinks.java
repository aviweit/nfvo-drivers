/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.nextworks.openapi.msno.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import it.nextworks.openapi.msno.model.Link;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Links to resources related to this resource.
 */
@ApiModel(description = "Links to resources related to this resource.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-08T16:52:33.422+01:00")
public class NsInstanceLinks {
  @SerializedName("self")
  private Link self = null;

  @SerializedName("nestedNsInstances")
  private List<Link> nestedNsInstances = null;

  @SerializedName("instantiate")
  private Link instantiate = null;

  @SerializedName("terminate")
  private Link terminate = null;

  @SerializedName("update")
  private Link update = null;

  @SerializedName("scale")
  private Link scale = null;

  @SerializedName("heal")
  private Link heal = null;

  public NsInstanceLinks self(Link self) {
    this.self = self;
    return this;
  }

   /**
   * URI of this resource. 
   * @return self
  **/
  @ApiModelProperty(required = true, value = "URI of this resource. ")
  public Link getSelf() {
    return self;
  }

  public void setSelf(Link self) {
    this.self = self;
  }

  public NsInstanceLinks nestedNsInstances(List<Link> nestedNsInstances) {
    this.nestedNsInstances = nestedNsInstances;
    return this;
  }

  public NsInstanceLinks addNestedNsInstancesItem(Link nestedNsInstancesItem) {
    if (this.nestedNsInstances == null) {
      this.nestedNsInstances = new ArrayList<Link>();
    }
    this.nestedNsInstances.add(nestedNsInstancesItem);
    return this;
  }

   /**
   * Links to resources related to this notification. 
   * @return nestedNsInstances
  **/
  @ApiModelProperty(value = "Links to resources related to this notification. ")
  public List<Link> getNestedNsInstances() {
    return nestedNsInstances;
  }

  public void setNestedNsInstances(List<Link> nestedNsInstances) {
    this.nestedNsInstances = nestedNsInstances;
  }

  public NsInstanceLinks instantiate(Link instantiate) {
    this.instantiate = instantiate;
    return this;
  }

   /**
   * Link to the \&quot;instantiate\&quot; task resource, if the related operation is possible based on the current status of this NS instance resource (i.e. NS instance in NOT_INSTANTIATED state). 
   * @return instantiate
  **/
  @ApiModelProperty(value = "Link to the \"instantiate\" task resource, if the related operation is possible based on the current status of this NS instance resource (i.e. NS instance in NOT_INSTANTIATED state). ")
  public Link getInstantiate() {
    return instantiate;
  }

  public void setInstantiate(Link instantiate) {
    this.instantiate = instantiate;
  }

  public NsInstanceLinks terminate(Link terminate) {
    this.terminate = terminate;
    return this;
  }

   /**
   * Link to the \&quot;terminate\&quot; task resource, if the related operation is possible based on the current status of this NS instance resource (i.e. NS instance is in INSTANTIATED state). 
   * @return terminate
  **/
  @ApiModelProperty(value = "Link to the \"terminate\" task resource, if the related operation is possible based on the current status of this NS instance resource (i.e. NS instance is in INSTANTIATED state). ")
  public Link getTerminate() {
    return terminate;
  }

  public void setTerminate(Link terminate) {
    this.terminate = terminate;
  }

  public NsInstanceLinks update(Link update) {
    this.update = update;
    return this;
  }

   /**
   * Link to the \&quot;update\&quot; task resource, if the related operation is possible based on the current status of this NS instance resource (i.e. NS instance is in INSTANTIATED state). 
   * @return update
  **/
  @ApiModelProperty(value = "Link to the \"update\" task resource, if the related operation is possible based on the current status of this NS instance resource (i.e. NS instance is in INSTANTIATED state). ")
  public Link getUpdate() {
    return update;
  }

  public void setUpdate(Link update) {
    this.update = update;
  }

  public NsInstanceLinks scale(Link scale) {
    this.scale = scale;
    return this;
  }

   /**
   * Link to the \&quot;scale\&quot; task resource, if the related operation is supported for this NS instance, and is possible based on the current status of this NS instance resource (i.e. NS instance is in INSTANTIATED state). 
   * @return scale
  **/
  @ApiModelProperty(value = "Link to the \"scale\" task resource, if the related operation is supported for this NS instance, and is possible based on the current status of this NS instance resource (i.e. NS instance is in INSTANTIATED state). ")
  public Link getScale() {
    return scale;
  }

  public void setScale(Link scale) {
    this.scale = scale;
  }

  public NsInstanceLinks heal(Link heal) {
    this.heal = heal;
    return this;
  }

   /**
   * Link to the \&quot;heal\&quot; task resource, if the related operation is supported for this NS instance, and is possible based on the current status of this NS instance resource (i.e. NS instance is in INSTANTIATED state). 
   * @return heal
  **/
  @ApiModelProperty(value = "Link to the \"heal\" task resource, if the related operation is supported for this NS instance, and is possible based on the current status of this NS instance resource (i.e. NS instance is in INSTANTIATED state). ")
  public Link getHeal() {
    return heal;
  }

  public void setHeal(Link heal) {
    this.heal = heal;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsInstanceLinks nsInstanceLinks = (NsInstanceLinks) o;
    return Objects.equals(this.self, nsInstanceLinks.self) &&
        Objects.equals(this.nestedNsInstances, nsInstanceLinks.nestedNsInstances) &&
        Objects.equals(this.instantiate, nsInstanceLinks.instantiate) &&
        Objects.equals(this.terminate, nsInstanceLinks.terminate) &&
        Objects.equals(this.update, nsInstanceLinks.update) &&
        Objects.equals(this.scale, nsInstanceLinks.scale) &&
        Objects.equals(this.heal, nsInstanceLinks.heal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(self, nestedNsInstances, instantiate, terminate, update, scale, heal);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsInstanceLinks {\n");
    
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    nestedNsInstances: ").append(toIndentedString(nestedNsInstances)).append("\n");
    sb.append("    instantiate: ").append(toIndentedString(instantiate)).append("\n");
    sb.append("    terminate: ").append(toIndentedString(terminate)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    scale: ").append(toIndentedString(scale)).append("\n");
    sb.append("    heal: ").append(toIndentedString(heal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

