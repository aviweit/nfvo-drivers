/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.nextworks.openapi.msno.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import it.nextworks.openapi.msno.model.CancelModeType;
import it.nextworks.openapi.msno.model.NsLcmOpOccLinks;
import it.nextworks.openapi.msno.model.NsLcmOpOccResourceChanges;
import it.nextworks.openapi.msno.model.NsLcmOpType;
import it.nextworks.openapi.msno.model.NsLcmOperationStateType;
import it.nextworks.openapi.msno.model.ProblemDetails;

import java.io.IOException;

/**
 * This type represents a request a NS lifecycle operation occurrence. It shall comply with the provisions defined in Table 6.5.2.3-1. 
 */
@ApiModel(description = "This type represents a request a NS lifecycle operation occurrence. It shall comply with the provisions defined in Table 6.5.2.3-1. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-08T16:52:33.422+01:00")
public class NsLcmOpOcc {
  @SerializedName("id")
  private String id = null;

  @SerializedName("operationState")
  private NsLcmOperationStateType operationState = null;

  @SerializedName("stateEnteredTime")
  private String stateEnteredTime = null;

  @SerializedName("nsInstanceId")
  private String nsInstanceId = null;

  @SerializedName("lcmOperationType")
  private NsLcmOpType lcmOperationType = null;

  @SerializedName("startTime")
  private String startTime = null;

  @SerializedName("isAutomaticInvocation")
  private Boolean isAutomaticInvocation = null;

  /**
   * Input parameters of the LCM operation. This attribute shall be formatted according to the request data type of the related LCM operation. The following mapping between lcmOperationType and the data type of this attribute shall apply: - INSTANTIATE: InstantiateNsRequest - SCALE: ScaleNsRequest - UPDATE: UpdateNsRequest - HEAL: HealNsRequest - TERMINATE: TerminateNsRequest This attribute shall be present if this data type is returned in a response to reading an individual resource, and may be present according to the chosen attribute selector parameter if this data type is returned in a response to a query of a container resource. 
   */
  @JsonAdapter(OperationParamsEnum.Adapter.class)
  public enum OperationParamsEnum {
    INSTANTIATE("INSTANTIATE"),
    
    SCALE("SCALE"),
    
    UPDATE("UPDATE"),
    
    HEAL("HEAL"),
    
    TERMINATE("TERMINATE");

    private String value;

    OperationParamsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OperationParamsEnum fromValue(String text) {
      for (OperationParamsEnum b : OperationParamsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<OperationParamsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OperationParamsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OperationParamsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return OperationParamsEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("operationParams")
  private OperationParamsEnum operationParams = null;

  @SerializedName("isCancelPending")
  private Boolean isCancelPending = null;

  @SerializedName("cancelMode")
  private CancelModeType cancelMode = null;

  @SerializedName("error")
  private ProblemDetails error = null;

  @SerializedName("resourceChanges")
  private NsLcmOpOccResourceChanges resourceChanges = null;

  @SerializedName("_links")
  private NsLcmOpOccLinks links = null;

  public NsLcmOpOcc id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of this NS lifecycle operation occurrence. 
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Identifier of this NS lifecycle operation occurrence. ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public NsLcmOpOcc operationState(NsLcmOperationStateType operationState) {
    this.operationState = operationState;
    return this;
  }

   /**
   * The state of the NS LCM operation. 
   * @return operationState
  **/
  @ApiModelProperty(required = true, value = "The state of the NS LCM operation. ")
  public NsLcmOperationStateType getOperationState() {
    return operationState;
  }

  public void setOperationState(NsLcmOperationStateType operationState) {
    this.operationState = operationState;
  }

  public NsLcmOpOcc stateEnteredTime(String stateEnteredTime) {
    this.stateEnteredTime = stateEnteredTime;
    return this;
  }

   /**
   * Date-time when the current state was entered. 
   * @return stateEnteredTime
  **/
  @ApiModelProperty(required = true, value = "Date-time when the current state was entered. ")
  public String getStateEnteredTime() {
    return stateEnteredTime;
  }

  public void setStateEnteredTime(String stateEnteredTime) {
    this.stateEnteredTime = stateEnteredTime;
  }

  public NsLcmOpOcc nsInstanceId(String nsInstanceId) {
    this.nsInstanceId = nsInstanceId;
    return this;
  }

   /**
   * Identifier of the NS instance to which the operation applies. 
   * @return nsInstanceId
  **/
  @ApiModelProperty(required = true, value = "Identifier of the NS instance to which the operation applies. ")
  public String getNsInstanceId() {
    return nsInstanceId;
  }

  public void setNsInstanceId(String nsInstanceId) {
    this.nsInstanceId = nsInstanceId;
  }

  public NsLcmOpOcc lcmOperationType(NsLcmOpType lcmOperationType) {
    this.lcmOperationType = lcmOperationType;
    return this;
  }

   /**
   * Type of the actual LCM operation represented by this lcm operation occurrence. 
   * @return lcmOperationType
  **/
  @ApiModelProperty(required = true, value = "Type of the actual LCM operation represented by this lcm operation occurrence. ")
  public NsLcmOpType getLcmOperationType() {
    return lcmOperationType;
  }

  public void setLcmOperationType(NsLcmOpType lcmOperationType) {
    this.lcmOperationType = lcmOperationType;
  }

  public NsLcmOpOcc startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Date-time of the start of the operation. 
   * @return startTime
  **/
  @ApiModelProperty(required = true, value = "Date-time of the start of the operation. ")
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public NsLcmOpOcc isAutomaticInvocation(Boolean isAutomaticInvocation) {
    this.isAutomaticInvocation = isAutomaticInvocation;
    return this;
  }

   /**
   * Set to true if this NS LCM operation occurrence has been automatically triggered by the NFVO. This occurs in the case of auto-scaling, auto-healing and when a nested NS is modified as a result of an operation on its composite NS. Set to false otherwise. 
   * @return isAutomaticInvocation
  **/
  @ApiModelProperty(required = true, value = "Set to true if this NS LCM operation occurrence has been automatically triggered by the NFVO. This occurs in the case of auto-scaling, auto-healing and when a nested NS is modified as a result of an operation on its composite NS. Set to false otherwise. ")
  public Boolean isIsAutomaticInvocation() {
    return isAutomaticInvocation;
  }

  public void setIsAutomaticInvocation(Boolean isAutomaticInvocation) {
    this.isAutomaticInvocation = isAutomaticInvocation;
  }

  public NsLcmOpOcc operationParams(OperationParamsEnum operationParams) {
    this.operationParams = operationParams;
    return this;
  }

   /**
   * Input parameters of the LCM operation. This attribute shall be formatted according to the request data type of the related LCM operation. The following mapping between lcmOperationType and the data type of this attribute shall apply: - INSTANTIATE: InstantiateNsRequest - SCALE: ScaleNsRequest - UPDATE: UpdateNsRequest - HEAL: HealNsRequest - TERMINATE: TerminateNsRequest This attribute shall be present if this data type is returned in a response to reading an individual resource, and may be present according to the chosen attribute selector parameter if this data type is returned in a response to a query of a container resource. 
   * @return operationParams
  **/
  @ApiModelProperty(value = "Input parameters of the LCM operation. This attribute shall be formatted according to the request data type of the related LCM operation. The following mapping between lcmOperationType and the data type of this attribute shall apply: - INSTANTIATE: InstantiateNsRequest - SCALE: ScaleNsRequest - UPDATE: UpdateNsRequest - HEAL: HealNsRequest - TERMINATE: TerminateNsRequest This attribute shall be present if this data type is returned in a response to reading an individual resource, and may be present according to the chosen attribute selector parameter if this data type is returned in a response to a query of a container resource. ")
  public OperationParamsEnum getOperationParams() {
    return operationParams;
  }

  public void setOperationParams(OperationParamsEnum operationParams) {
    this.operationParams = operationParams;
  }

  public NsLcmOpOcc isCancelPending(Boolean isCancelPending) {
    this.isCancelPending = isCancelPending;
    return this;
  }

   /**
   * If the LCM operation occurrence is in \&quot;PROCESSING\&quot; or \&quot;ROLLING_BACK\&quot; state and the operation is being cancelled, this attribute shall be set to true. Otherwise, it shall be set to false. 
   * @return isCancelPending
  **/
  @ApiModelProperty(required = true, value = "If the LCM operation occurrence is in \"PROCESSING\" or \"ROLLING_BACK\" state and the operation is being cancelled, this attribute shall be set to true. Otherwise, it shall be set to false. ")
  public Boolean isIsCancelPending() {
    return isCancelPending;
  }

  public void setIsCancelPending(Boolean isCancelPending) {
    this.isCancelPending = isCancelPending;
  }

  public NsLcmOpOcc cancelMode(CancelModeType cancelMode) {
    this.cancelMode = cancelMode;
    return this;
  }

   /**
   * The mode of an ongoing cancellation. Shall be present when isCancelPending&#x3D;true, and shall be absent otherwise. 
   * @return cancelMode
  **/
  @ApiModelProperty(value = "The mode of an ongoing cancellation. Shall be present when isCancelPending=true, and shall be absent otherwise. ")
  public CancelModeType getCancelMode() {
    return cancelMode;
  }

  public void setCancelMode(CancelModeType cancelMode) {
    this.cancelMode = cancelMode;
  }

  public NsLcmOpOcc error(ProblemDetails error) {
    this.error = error;
    return this;
  }

   /**
   * If \&quot;operationState\&quot; is \&quot;FAILED_TEMP\&quot; or \&quot;FAILED\&quot; or \&quot;operationState\&quot; is \&quot;PROCESSING\&quot; or \&quot;ROLLING_BACK\&quot; and previous value of \&quot;operationState\&quot; was \&quot;FAILED_TEMP\&quot;, this attribute shall be present and contain error information, unless it has been requested to be excluded via an attribute selector. 
   * @return error
  **/
  @ApiModelProperty(value = "If \"operationState\" is \"FAILED_TEMP\" or \"FAILED\" or \"operationState\" is \"PROCESSING\" or \"ROLLING_BACK\" and previous value of \"operationState\" was \"FAILED_TEMP\", this attribute shall be present and contain error information, unless it has been requested to be excluded via an attribute selector. ")
  public ProblemDetails getError() {
    return error;
  }

  public void setError(ProblemDetails error) {
    this.error = error;
  }

  public NsLcmOpOcc resourceChanges(NsLcmOpOccResourceChanges resourceChanges) {
    this.resourceChanges = resourceChanges;
    return this;
  }

   /**
   * Get resourceChanges
   * @return resourceChanges
  **/
  @ApiModelProperty(value = "")
  public NsLcmOpOccResourceChanges getResourceChanges() {
    return resourceChanges;
  }

  public void setResourceChanges(NsLcmOpOccResourceChanges resourceChanges) {
    this.resourceChanges = resourceChanges;
  }

  public NsLcmOpOcc links(NsLcmOpOccLinks links) {
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(required = true, value = "")
  public NsLcmOpOccLinks getLinks() {
    return links;
  }

  public void setLinks(NsLcmOpOccLinks links) {
    this.links = links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsLcmOpOcc nsLcmOpOcc = (NsLcmOpOcc) o;
    return Objects.equals(this.id, nsLcmOpOcc.id) &&
        Objects.equals(this.operationState, nsLcmOpOcc.operationState) &&
        Objects.equals(this.stateEnteredTime, nsLcmOpOcc.stateEnteredTime) &&
        Objects.equals(this.nsInstanceId, nsLcmOpOcc.nsInstanceId) &&
        Objects.equals(this.lcmOperationType, nsLcmOpOcc.lcmOperationType) &&
        Objects.equals(this.startTime, nsLcmOpOcc.startTime) &&
        Objects.equals(this.isAutomaticInvocation, nsLcmOpOcc.isAutomaticInvocation) &&
        Objects.equals(this.operationParams, nsLcmOpOcc.operationParams) &&
        Objects.equals(this.isCancelPending, nsLcmOpOcc.isCancelPending) &&
        Objects.equals(this.cancelMode, nsLcmOpOcc.cancelMode) &&
        Objects.equals(this.error, nsLcmOpOcc.error) &&
        Objects.equals(this.resourceChanges, nsLcmOpOcc.resourceChanges) &&
        Objects.equals(this.links, nsLcmOpOcc.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, operationState, stateEnteredTime, nsInstanceId, lcmOperationType, startTime, isAutomaticInvocation, operationParams, isCancelPending, cancelMode, error, resourceChanges, links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsLcmOpOcc {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    operationState: ").append(toIndentedString(operationState)).append("\n");
    sb.append("    stateEnteredTime: ").append(toIndentedString(stateEnteredTime)).append("\n");
    sb.append("    nsInstanceId: ").append(toIndentedString(nsInstanceId)).append("\n");
    sb.append("    lcmOperationType: ").append(toIndentedString(lcmOperationType)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    isAutomaticInvocation: ").append(toIndentedString(isAutomaticInvocation)).append("\n");
    sb.append("    operationParams: ").append(toIndentedString(operationParams)).append("\n");
    sb.append("    isCancelPending: ").append(toIndentedString(isCancelPending)).append("\n");
    sb.append("    cancelMode: ").append(toIndentedString(cancelMode)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    resourceChanges: ").append(toIndentedString(resourceChanges)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

