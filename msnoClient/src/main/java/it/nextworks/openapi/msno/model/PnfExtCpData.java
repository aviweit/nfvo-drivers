/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.nextworks.openapi.msno.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import it.nextworks.openapi.msno.model.CpProtocolData;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * This type represents the configuration data on the external CP of the PNF. It shall comply with the provisions defined in Table 6.5.3.16-1. 
 */
@ApiModel(description = "This type represents the configuration data on the external CP of the PNF. It shall comply with the provisions defined in Table 6.5.3.16-1. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-08T16:52:33.422+01:00")
public class PnfExtCpData {
  @SerializedName("cpInstanceI16")
  private String cpInstanceI16 = null;

  @SerializedName("cpdId")
  private String cpdId = null;

  @SerializedName("cpProtocolData")
  private List<CpProtocolData> cpProtocolData = new ArrayList<CpProtocolData>();

  public PnfExtCpData cpInstanceI16(String cpInstanceI16) {
    this.cpInstanceI16 = cpInstanceI16;
    return this;
  }

   /**
   * Identifier of the CP. Shall be present for existing CP. 
   * @return cpInstanceI16
  **/
  @ApiModelProperty(value = "Identifier of the CP. Shall be present for existing CP. ")
  public String getCpInstanceI16() {
    return cpInstanceI16;
  }

  public void setCpInstanceI16(String cpInstanceI16) {
    this.cpInstanceI16 = cpInstanceI16;
  }

  public PnfExtCpData cpdId(String cpdId) {
    this.cpdId = cpdId;
    return this;
  }

   /**
   * Identifier of the Connection Point Descriptor (CPD) for this CP. Shall be present for new CP. 
   * @return cpdId
  **/
  @ApiModelProperty(value = "Identifier of the Connection Point Descriptor (CPD) for this CP. Shall be present for new CP. ")
  public String getCpdId() {
    return cpdId;
  }

  public void setCpdId(String cpdId) {
    this.cpdId = cpdId;
  }

  public PnfExtCpData cpProtocolData(List<CpProtocolData> cpProtocolData) {
    this.cpProtocolData = cpProtocolData;
    return this;
  }

  public PnfExtCpData addCpProtocolDataItem(CpProtocolData cpProtocolDataItem) {
    this.cpProtocolData.add(cpProtocolDataItem);
    return this;
  }

   /**
   * Address assigned for this CP. 
   * @return cpProtocolData
  **/
  @ApiModelProperty(required = true, value = "Address assigned for this CP. ")
  public List<CpProtocolData> getCpProtocolData() {
    return cpProtocolData;
  }

  public void setCpProtocolData(List<CpProtocolData> cpProtocolData) {
    this.cpProtocolData = cpProtocolData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PnfExtCpData pnfExtCpData = (PnfExtCpData) o;
    return Objects.equals(this.cpInstanceI16, pnfExtCpData.cpInstanceI16) &&
        Objects.equals(this.cpdId, pnfExtCpData.cpdId) &&
        Objects.equals(this.cpProtocolData, pnfExtCpData.cpProtocolData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpInstanceI16, cpdId, cpProtocolData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PnfExtCpData {\n");
    
    sb.append("    cpInstanceI16: ").append(toIndentedString(cpInstanceI16)).append("\n");
    sb.append("    cpdId: ").append(toIndentedString(cpdId)).append("\n");
    sb.append("    cpProtocolData: ").append(toIndentedString(cpProtocolData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

