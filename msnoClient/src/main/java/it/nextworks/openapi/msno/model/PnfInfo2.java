/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.nextworks.openapi.msno.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import it.nextworks.openapi.msno.model.PnfExtCpInfo2;

import java.io.IOException;

/**
 * This type represents the information about a PNF that is part of an NS instance. It shall comply with the provisions defined in Table 6.5.3.13-1. 
 */
@ApiModel(description = "This type represents the information about a PNF that is part of an NS instance. It shall comply with the provisions defined in Table 6.5.3.13-1. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-08T16:52:33.422+01:00")
public class PnfInfo2 {
  @SerializedName("pnfId")
  private String pnfId = null;

  @SerializedName("pnfName")
  private String pnfName = null;

  @SerializedName("pnfdId")
  private String pnfdId = null;

  @SerializedName("pnfdInfoId")
  private String pnfdInfoId = null;

  @SerializedName("pnfProfileId")
  private String pnfProfileId = null;

  @SerializedName("cpInfo")
  private PnfExtCpInfo2 cpInfo = null;

  public PnfInfo2 pnfId(String pnfId) {
    this.pnfId = pnfId;
    return this;
  }

   /**
   * Identifier of the PNF. This identifier is allocated by the OSS/BSS. 
   * @return pnfId
  **/
  @ApiModelProperty(required = true, value = "Identifier of the PNF. This identifier is allocated by the OSS/BSS. ")
  public String getPnfId() {
    return pnfId;
  }

  public void setPnfId(String pnfId) {
    this.pnfId = pnfId;
  }

  public PnfInfo2 pnfName(String pnfName) {
    this.pnfName = pnfName;
    return this;
  }

   /**
   * Name of the PNF. 
   * @return pnfName
  **/
  @ApiModelProperty(value = "Name of the PNF. ")
  public String getPnfName() {
    return pnfName;
  }

  public void setPnfName(String pnfName) {
    this.pnfName = pnfName;
  }

  public PnfInfo2 pnfdId(String pnfdId) {
    this.pnfdId = pnfdId;
    return this;
  }

   /**
   * Identifier of the PNFD on which the PNF is based. 
   * @return pnfdId
  **/
  @ApiModelProperty(required = true, value = "Identifier of the PNFD on which the PNF is based. ")
  public String getPnfdId() {
    return pnfdId;
  }

  public void setPnfdId(String pnfdId) {
    this.pnfdId = pnfdId;
  }

  public PnfInfo2 pnfdInfoId(String pnfdInfoId) {
    this.pnfdInfoId = pnfdInfoId;
    return this;
  }

   /**
   * Identifier of the PNFD information onject related to this PNF. This identifier is allocated by the NFVO 
   * @return pnfdInfoId
  **/
  @ApiModelProperty(required = true, value = "Identifier of the PNFD information onject related to this PNF. This identifier is allocated by the NFVO ")
  public String getPnfdInfoId() {
    return pnfdInfoId;
  }

  public void setPnfdInfoId(String pnfdInfoId) {
    this.pnfdInfoId = pnfdInfoId;
  }

  public PnfInfo2 pnfProfileId(String pnfProfileId) {
    this.pnfProfileId = pnfProfileId;
    return this;
  }

   /**
   * Identifier of the related PnfProfile in the NSD on which the PNF is based. 
   * @return pnfProfileId
  **/
  @ApiModelProperty(required = true, value = "Identifier of the related PnfProfile in the NSD on which the PNF is based. ")
  public String getPnfProfileId() {
    return pnfProfileId;
  }

  public void setPnfProfileId(String pnfProfileId) {
    this.pnfProfileId = pnfProfileId;
  }

  public PnfInfo2 cpInfo(PnfExtCpInfo2 cpInfo) {
    this.cpInfo = cpInfo;
    return this;
  }

   /**
   * Information on the external CP of the PNF. 
   * @return cpInfo
  **/
  @ApiModelProperty(value = "Information on the external CP of the PNF. ")
  public PnfExtCpInfo2 getCpInfo() {
    return cpInfo;
  }

  public void setCpInfo(PnfExtCpInfo2 cpInfo) {
    this.cpInfo = cpInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PnfInfo2 pnfInfo2 = (PnfInfo2) o;
    return Objects.equals(this.pnfId, pnfInfo2.pnfId) &&
        Objects.equals(this.pnfName, pnfInfo2.pnfName) &&
        Objects.equals(this.pnfdId, pnfInfo2.pnfdId) &&
        Objects.equals(this.pnfdInfoId, pnfInfo2.pnfdInfoId) &&
        Objects.equals(this.pnfProfileId, pnfInfo2.pnfProfileId) &&
        Objects.equals(this.cpInfo, pnfInfo2.cpInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pnfId, pnfName, pnfdId, pnfdInfoId, pnfProfileId, cpInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PnfInfo2 {\n");
    
    sb.append("    pnfId: ").append(toIndentedString(pnfId)).append("\n");
    sb.append("    pnfName: ").append(toIndentedString(pnfName)).append("\n");
    sb.append("    pnfdId: ").append(toIndentedString(pnfdId)).append("\n");
    sb.append("    pnfdInfoId: ").append(toIndentedString(pnfdInfoId)).append("\n");
    sb.append("    pnfProfileId: ").append(toIndentedString(pnfProfileId)).append("\n");
    sb.append("    cpInfo: ").append(toIndentedString(cpInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

