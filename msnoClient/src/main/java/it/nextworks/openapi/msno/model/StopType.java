/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.nextworks.openapi.msno.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * * FORCEFUL: The VNFM will stop the VNF immediately after accepting the   request. * GRACEFUL: The VNFM will first arrange to take the VNF out of service   after accepting the request. Once that operation is successful or once   the timer value specified in the \&quot;gracefulStopTimeout\&quot; attribute   expires, the VNFM will stop the VNF. 
 */
@JsonAdapter(StopType.Adapter.class)
public enum StopType {
  
  FORCEFUL("FORCEFUL"),
  
  GRACEFUL("GRACEFUL");

  private String value;

  StopType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static StopType fromValue(String text) {
    for (StopType b : StopType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<StopType> {
    @Override
    public void write(final JsonWriter jsonWriter, final StopType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public StopType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return StopType.fromValue(String.valueOf(value));
    }
  }
}

