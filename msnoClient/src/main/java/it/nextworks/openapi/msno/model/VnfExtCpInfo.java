/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.nextworks.openapi.msno.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import it.nextworks.openapi.msno.model.CpProtocolInfo;
import it.nextworks.openapi.msno.model.KeyValuePairs;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * This type represents information about an external CP of a VNF. It shall comply with the provisions defined in Table 6.5.3.70-1. 
 */
@ApiModel(description = "This type represents information about an external CP of a VNF. It shall comply with the provisions defined in Table 6.5.3.70-1. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-08T16:52:33.422+01:00")
public class VnfExtCpInfo {
  @SerializedName("id")
  private String id = null;

  @SerializedName("cpdId")
  private String cpdId = null;

  @SerializedName("cpProtocolInfo")
  private List<CpProtocolInfo> cpProtocolInfo = null;

  @SerializedName("extLinkPortId")
  private CpProtocolInfo extLinkPortId = null;

  @SerializedName("metadata")
  private KeyValuePairs metadata = null;

  @SerializedName("associatedVnfcCpId")
  private String associatedVnfcCpId = null;

  @SerializedName("associatedVnfVirtualLinkId")
  private String associatedVnfVirtualLinkId = null;

  public VnfExtCpInfo id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of the external CP instance and the related information instance. 
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Identifier of the external CP instance and the related information instance. ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public VnfExtCpInfo cpdId(String cpdId) {
    this.cpdId = cpdId;
    return this;
  }

   /**
   * Identifier of the external CPD, VnfExtCpd, in the VNFD. 
   * @return cpdId
  **/
  @ApiModelProperty(required = true, value = "Identifier of the external CPD, VnfExtCpd, in the VNFD. ")
  public String getCpdId() {
    return cpdId;
  }

  public void setCpdId(String cpdId) {
    this.cpdId = cpdId;
  }

  public VnfExtCpInfo cpProtocolInfo(List<CpProtocolInfo> cpProtocolInfo) {
    this.cpProtocolInfo = cpProtocolInfo;
    return this;
  }

  public VnfExtCpInfo addCpProtocolInfoItem(CpProtocolInfo cpProtocolInfoItem) {
    if (this.cpProtocolInfo == null) {
      this.cpProtocolInfo = new ArrayList<CpProtocolInfo>();
    }
    this.cpProtocolInfo.add(cpProtocolInfoItem);
    return this;
  }

   /**
   * Network protocol information for this CP. 
   * @return cpProtocolInfo
  **/
  @ApiModelProperty(value = "Network protocol information for this CP. ")
  public List<CpProtocolInfo> getCpProtocolInfo() {
    return cpProtocolInfo;
  }

  public void setCpProtocolInfo(List<CpProtocolInfo> cpProtocolInfo) {
    this.cpProtocolInfo = cpProtocolInfo;
  }

  public VnfExtCpInfo extLinkPortId(CpProtocolInfo extLinkPortId) {
    this.extLinkPortId = extLinkPortId;
    return this;
  }

   /**
   * Identifier of the \&quot;extLinkPortInfo\&quot; structure inside the \&quot;extVirtualLinkInfo\&quot; structure. Shall be present if the CP is associated to a link port. 
   * @return extLinkPortId
  **/
  @ApiModelProperty(value = "Identifier of the \"extLinkPortInfo\" structure inside the \"extVirtualLinkInfo\" structure. Shall be present if the CP is associated to a link port. ")
  public CpProtocolInfo getExtLinkPortId() {
    return extLinkPortId;
  }

  public void setExtLinkPortId(CpProtocolInfo extLinkPortId) {
    this.extLinkPortId = extLinkPortId;
  }

  public VnfExtCpInfo metadata(KeyValuePairs metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Metadata about this external CP. 
   * @return metadata
  **/
  @ApiModelProperty(value = "Metadata about this external CP. ")
  public KeyValuePairs getMetadata() {
    return metadata;
  }

  public void setMetadata(KeyValuePairs metadata) {
    this.metadata = metadata;
  }

  public VnfExtCpInfo associatedVnfcCpId(String associatedVnfcCpId) {
    this.associatedVnfcCpId = associatedVnfcCpId;
    return this;
  }

   /**
   * Identifier of the \&quot;vnfcCpInfo\&quot; structure in \&quot;VnfcResourceInfo\&quot; structure that represents the VNFC CP which is exposed by this external CP instance. Shall be present in case this CP instance maps to a VNFC CP(s). The attributes \&quot;associatedVnfcCpId\&quot; and \&quot;associatedVnfVirtualLinkId\&quot; are mutually exclusive. One and only one shall be present. 
   * @return associatedVnfcCpId
  **/
  @ApiModelProperty(value = "Identifier of the \"vnfcCpInfo\" structure in \"VnfcResourceInfo\" structure that represents the VNFC CP which is exposed by this external CP instance. Shall be present in case this CP instance maps to a VNFC CP(s). The attributes \"associatedVnfcCpId\" and \"associatedVnfVirtualLinkId\" are mutually exclusive. One and only one shall be present. ")
  public String getAssociatedVnfcCpId() {
    return associatedVnfcCpId;
  }

  public void setAssociatedVnfcCpId(String associatedVnfcCpId) {
    this.associatedVnfcCpId = associatedVnfcCpId;
  }

  public VnfExtCpInfo associatedVnfVirtualLinkId(String associatedVnfVirtualLinkId) {
    this.associatedVnfVirtualLinkId = associatedVnfVirtualLinkId;
    return this;
  }

   /**
   * Identifier of the \&quot;VnfVirtualLinkResourceInfo\&quot; structure that represents the internal VL, which is exposed by this external CP instance. Shall be present in case this CP instance maps to an internal VL. The attributes \&quot;associatedVnfcCpId\&quot; and \&quot;associatedVnfVirtualLinkId\&quot; are mutually exclusive. One and only one shall be present. 
   * @return associatedVnfVirtualLinkId
  **/
  @ApiModelProperty(value = "Identifier of the \"VnfVirtualLinkResourceInfo\" structure that represents the internal VL, which is exposed by this external CP instance. Shall be present in case this CP instance maps to an internal VL. The attributes \"associatedVnfcCpId\" and \"associatedVnfVirtualLinkId\" are mutually exclusive. One and only one shall be present. ")
  public String getAssociatedVnfVirtualLinkId() {
    return associatedVnfVirtualLinkId;
  }

  public void setAssociatedVnfVirtualLinkId(String associatedVnfVirtualLinkId) {
    this.associatedVnfVirtualLinkId = associatedVnfVirtualLinkId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VnfExtCpInfo vnfExtCpInfo = (VnfExtCpInfo) o;
    return Objects.equals(this.id, vnfExtCpInfo.id) &&
        Objects.equals(this.cpdId, vnfExtCpInfo.cpdId) &&
        Objects.equals(this.cpProtocolInfo, vnfExtCpInfo.cpProtocolInfo) &&
        Objects.equals(this.extLinkPortId, vnfExtCpInfo.extLinkPortId) &&
        Objects.equals(this.metadata, vnfExtCpInfo.metadata) &&
        Objects.equals(this.associatedVnfcCpId, vnfExtCpInfo.associatedVnfcCpId) &&
        Objects.equals(this.associatedVnfVirtualLinkId, vnfExtCpInfo.associatedVnfVirtualLinkId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, cpdId, cpProtocolInfo, extLinkPortId, metadata, associatedVnfcCpId, associatedVnfVirtualLinkId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VnfExtCpInfo {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    cpdId: ").append(toIndentedString(cpdId)).append("\n");
    sb.append("    cpProtocolInfo: ").append(toIndentedString(cpProtocolInfo)).append("\n");
    sb.append("    extLinkPortId: ").append(toIndentedString(extLinkPortId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    associatedVnfcCpId: ").append(toIndentedString(associatedVnfcCpId)).append("\n");
    sb.append("    associatedVnfVirtualLinkId: ").append(toIndentedString(associatedVnfVirtualLinkId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

