/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.nextworks.openapi.msno.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import it.nextworks.openapi.msno.model.ExtManagedVirtualLinkInfo;
import it.nextworks.openapi.msno.model.ExtVirtualLinkInfo;
import it.nextworks.openapi.msno.model.VirtualStorageResourceInfo;
import it.nextworks.openapi.msno.model.VnfExtCpInfo;
import it.nextworks.openapi.msno.model.VnfMonitoringParameter;
import it.nextworks.openapi.msno.model.VnfOperationalStateType;
import it.nextworks.openapi.msno.model.VnfScaleInfo;
import it.nextworks.openapi.msno.model.VnfVirtualLinkResourceInfo;
import it.nextworks.openapi.msno.model.VnfcResourceInfo;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Information specific to an instantiated VNF instance. This attribute shall be present if the instantiateState attribute value is INSTANTIATED. 
 */
@ApiModel(description = "Information specific to an instantiated VNF instance. This attribute shall be present if the instantiateState attribute value is INSTANTIATED. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-08T16:52:33.422+01:00")
public class VnfInstanceInstantiatedVnfInfo {
  @SerializedName("flavourId")
  private String flavourId = null;

  @SerializedName("vnfState")
  private VnfOperationalStateType vnfState = null;

  @SerializedName("scaleStatus")
  private List<VnfScaleInfo> scaleStatus = null;

  @SerializedName("extCpInfo")
  private List<VnfExtCpInfo> extCpInfo = null;

  @SerializedName("extVirtualLinkInfo")
  private List<ExtVirtualLinkInfo> extVirtualLinkInfo = null;

  @SerializedName("extManagedVirtualLinkInfo")
  private List<ExtManagedVirtualLinkInfo> extManagedVirtualLinkInfo = null;

  @SerializedName("monitoringParameters")
  private List<VnfMonitoringParameter> monitoringParameters = null;

  @SerializedName("localizationLanguage")
  private String localizationLanguage = null;

  @SerializedName("vnfcResourceInfo")
  private List<VnfcResourceInfo> vnfcResourceInfo = null;

  @SerializedName("virtualLinkResourceInfo")
  private List<VnfVirtualLinkResourceInfo> virtualLinkResourceInfo = null;

  @SerializedName("virtualStorageResourceInfo")
  private List<VirtualStorageResourceInfo> virtualStorageResourceInfo = null;

  public VnfInstanceInstantiatedVnfInfo flavourId(String flavourId) {
    this.flavourId = flavourId;
    return this;
  }

   /**
   * Identifier of the VNF deployment flavor applied to this VNF instance. 
   * @return flavourId
  **/
  @ApiModelProperty(required = true, value = "Identifier of the VNF deployment flavor applied to this VNF instance. ")
  public String getFlavourId() {
    return flavourId;
  }

  public void setFlavourId(String flavourId) {
    this.flavourId = flavourId;
  }

  public VnfInstanceInstantiatedVnfInfo vnfState(VnfOperationalStateType vnfState) {
    this.vnfState = vnfState;
    return this;
  }

   /**
   * The state of the VNF instance. 
   * @return vnfState
  **/
  @ApiModelProperty(required = true, value = "The state of the VNF instance. ")
  public VnfOperationalStateType getVnfState() {
    return vnfState;
  }

  public void setVnfState(VnfOperationalStateType vnfState) {
    this.vnfState = vnfState;
  }

  public VnfInstanceInstantiatedVnfInfo scaleStatus(List<VnfScaleInfo> scaleStatus) {
    this.scaleStatus = scaleStatus;
    return this;
  }

  public VnfInstanceInstantiatedVnfInfo addScaleStatusItem(VnfScaleInfo scaleStatusItem) {
    if (this.scaleStatus == null) {
      this.scaleStatus = new ArrayList<VnfScaleInfo>();
    }
    this.scaleStatus.add(scaleStatusItem);
    return this;
  }

   /**
   * Scale status of the VNF, one entry per aspect. Represents for every scaling aspect how \&quot;big\&quot; the VNF has been scaled w.r.t. that aspect. 
   * @return scaleStatus
  **/
  @ApiModelProperty(value = "Scale status of the VNF, one entry per aspect. Represents for every scaling aspect how \"big\" the VNF has been scaled w.r.t. that aspect. ")
  public List<VnfScaleInfo> getScaleStatus() {
    return scaleStatus;
  }

  public void setScaleStatus(List<VnfScaleInfo> scaleStatus) {
    this.scaleStatus = scaleStatus;
  }

  public VnfInstanceInstantiatedVnfInfo extCpInfo(List<VnfExtCpInfo> extCpInfo) {
    this.extCpInfo = extCpInfo;
    return this;
  }

  public VnfInstanceInstantiatedVnfInfo addExtCpInfoItem(VnfExtCpInfo extCpInfoItem) {
    if (this.extCpInfo == null) {
      this.extCpInfo = new ArrayList<VnfExtCpInfo>();
    }
    this.extCpInfo.add(extCpInfoItem);
    return this;
  }

   /**
   * Information about the external CPs exposed by the VNF instance. 
   * @return extCpInfo
  **/
  @ApiModelProperty(value = "Information about the external CPs exposed by the VNF instance. ")
  public List<VnfExtCpInfo> getExtCpInfo() {
    return extCpInfo;
  }

  public void setExtCpInfo(List<VnfExtCpInfo> extCpInfo) {
    this.extCpInfo = extCpInfo;
  }

  public VnfInstanceInstantiatedVnfInfo extVirtualLinkInfo(List<ExtVirtualLinkInfo> extVirtualLinkInfo) {
    this.extVirtualLinkInfo = extVirtualLinkInfo;
    return this;
  }

  public VnfInstanceInstantiatedVnfInfo addExtVirtualLinkInfoItem(ExtVirtualLinkInfo extVirtualLinkInfoItem) {
    if (this.extVirtualLinkInfo == null) {
      this.extVirtualLinkInfo = new ArrayList<ExtVirtualLinkInfo>();
    }
    this.extVirtualLinkInfo.add(extVirtualLinkInfoItem);
    return this;
  }

   /**
   * Information about the external VLs the VNF instance is connected to. 
   * @return extVirtualLinkInfo
  **/
  @ApiModelProperty(value = "Information about the external VLs the VNF instance is connected to. ")
  public List<ExtVirtualLinkInfo> getExtVirtualLinkInfo() {
    return extVirtualLinkInfo;
  }

  public void setExtVirtualLinkInfo(List<ExtVirtualLinkInfo> extVirtualLinkInfo) {
    this.extVirtualLinkInfo = extVirtualLinkInfo;
  }

  public VnfInstanceInstantiatedVnfInfo extManagedVirtualLinkInfo(List<ExtManagedVirtualLinkInfo> extManagedVirtualLinkInfo) {
    this.extManagedVirtualLinkInfo = extManagedVirtualLinkInfo;
    return this;
  }

  public VnfInstanceInstantiatedVnfInfo addExtManagedVirtualLinkInfoItem(ExtManagedVirtualLinkInfo extManagedVirtualLinkInfoItem) {
    if (this.extManagedVirtualLinkInfo == null) {
      this.extManagedVirtualLinkInfo = new ArrayList<ExtManagedVirtualLinkInfo>();
    }
    this.extManagedVirtualLinkInfo.add(extManagedVirtualLinkInfoItem);
    return this;
  }

   /**
   * External virtual links the VNF instance is connected to. 
   * @return extManagedVirtualLinkInfo
  **/
  @ApiModelProperty(value = "External virtual links the VNF instance is connected to. ")
  public List<ExtManagedVirtualLinkInfo> getExtManagedVirtualLinkInfo() {
    return extManagedVirtualLinkInfo;
  }

  public void setExtManagedVirtualLinkInfo(List<ExtManagedVirtualLinkInfo> extManagedVirtualLinkInfo) {
    this.extManagedVirtualLinkInfo = extManagedVirtualLinkInfo;
  }

  public VnfInstanceInstantiatedVnfInfo monitoringParameters(List<VnfMonitoringParameter> monitoringParameters) {
    this.monitoringParameters = monitoringParameters;
    return this;
  }

  public VnfInstanceInstantiatedVnfInfo addMonitoringParametersItem(VnfMonitoringParameter monitoringParametersItem) {
    if (this.monitoringParameters == null) {
      this.monitoringParameters = new ArrayList<VnfMonitoringParameter>();
    }
    this.monitoringParameters.add(monitoringParametersItem);
    return this;
  }

   /**
   * Performance metrics tracked by the VNFM (e.g. for auto-scaling purposes) as identified by the VNF provider in the VNFD. 
   * @return monitoringParameters
  **/
  @ApiModelProperty(value = "Performance metrics tracked by the VNFM (e.g. for auto-scaling purposes) as identified by the VNF provider in the VNFD. ")
  public List<VnfMonitoringParameter> getMonitoringParameters() {
    return monitoringParameters;
  }

  public void setMonitoringParameters(List<VnfMonitoringParameter> monitoringParameters) {
    this.monitoringParameters = monitoringParameters;
  }

  public VnfInstanceInstantiatedVnfInfo localizationLanguage(String localizationLanguage) {
    this.localizationLanguage = localizationLanguage;
    return this;
  }

   /**
   * Information about localization language of the VNF (includes e.g. strings in the VNFD). The localization languages supported by a VNF can be declared in the VNFD, and localization language selection can take place at instantiation time. The value shall comply with the format defined in IETF RFC 5646. 
   * @return localizationLanguage
  **/
  @ApiModelProperty(value = "Information about localization language of the VNF (includes e.g. strings in the VNFD). The localization languages supported by a VNF can be declared in the VNFD, and localization language selection can take place at instantiation time. The value shall comply with the format defined in IETF RFC 5646. ")
  public String getLocalizationLanguage() {
    return localizationLanguage;
  }

  public void setLocalizationLanguage(String localizationLanguage) {
    this.localizationLanguage = localizationLanguage;
  }

  public VnfInstanceInstantiatedVnfInfo vnfcResourceInfo(List<VnfcResourceInfo> vnfcResourceInfo) {
    this.vnfcResourceInfo = vnfcResourceInfo;
    return this;
  }

  public VnfInstanceInstantiatedVnfInfo addVnfcResourceInfoItem(VnfcResourceInfo vnfcResourceInfoItem) {
    if (this.vnfcResourceInfo == null) {
      this.vnfcResourceInfo = new ArrayList<VnfcResourceInfo>();
    }
    this.vnfcResourceInfo.add(vnfcResourceInfoItem);
    return this;
  }

   /**
   * Information about the virtualised compute and storage resources used by the VNFCs of the VNF instance. 
   * @return vnfcResourceInfo
  **/
  @ApiModelProperty(value = "Information about the virtualised compute and storage resources used by the VNFCs of the VNF instance. ")
  public List<VnfcResourceInfo> getVnfcResourceInfo() {
    return vnfcResourceInfo;
  }

  public void setVnfcResourceInfo(List<VnfcResourceInfo> vnfcResourceInfo) {
    this.vnfcResourceInfo = vnfcResourceInfo;
  }

  public VnfInstanceInstantiatedVnfInfo virtualLinkResourceInfo(List<VnfVirtualLinkResourceInfo> virtualLinkResourceInfo) {
    this.virtualLinkResourceInfo = virtualLinkResourceInfo;
    return this;
  }

  public VnfInstanceInstantiatedVnfInfo addVirtualLinkResourceInfoItem(VnfVirtualLinkResourceInfo virtualLinkResourceInfoItem) {
    if (this.virtualLinkResourceInfo == null) {
      this.virtualLinkResourceInfo = new ArrayList<VnfVirtualLinkResourceInfo>();
    }
    this.virtualLinkResourceInfo.add(virtualLinkResourceInfoItem);
    return this;
  }

   /**
   * Information about the virtualised network resources used by the VLs of the VNF instance. 
   * @return virtualLinkResourceInfo
  **/
  @ApiModelProperty(value = "Information about the virtualised network resources used by the VLs of the VNF instance. ")
  public List<VnfVirtualLinkResourceInfo> getVirtualLinkResourceInfo() {
    return virtualLinkResourceInfo;
  }

  public void setVirtualLinkResourceInfo(List<VnfVirtualLinkResourceInfo> virtualLinkResourceInfo) {
    this.virtualLinkResourceInfo = virtualLinkResourceInfo;
  }

  public VnfInstanceInstantiatedVnfInfo virtualStorageResourceInfo(List<VirtualStorageResourceInfo> virtualStorageResourceInfo) {
    this.virtualStorageResourceInfo = virtualStorageResourceInfo;
    return this;
  }

  public VnfInstanceInstantiatedVnfInfo addVirtualStorageResourceInfoItem(VirtualStorageResourceInfo virtualStorageResourceInfoItem) {
    if (this.virtualStorageResourceInfo == null) {
      this.virtualStorageResourceInfo = new ArrayList<VirtualStorageResourceInfo>();
    }
    this.virtualStorageResourceInfo.add(virtualStorageResourceInfoItem);
    return this;
  }

   /**
   * Information on the virtualised storage resource(s) used as storage for the VNF instance. 
   * @return virtualStorageResourceInfo
  **/
  @ApiModelProperty(value = "Information on the virtualised storage resource(s) used as storage for the VNF instance. ")
  public List<VirtualStorageResourceInfo> getVirtualStorageResourceInfo() {
    return virtualStorageResourceInfo;
  }

  public void setVirtualStorageResourceInfo(List<VirtualStorageResourceInfo> virtualStorageResourceInfo) {
    this.virtualStorageResourceInfo = virtualStorageResourceInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VnfInstanceInstantiatedVnfInfo vnfInstanceInstantiatedVnfInfo = (VnfInstanceInstantiatedVnfInfo) o;
    return Objects.equals(this.flavourId, vnfInstanceInstantiatedVnfInfo.flavourId) &&
        Objects.equals(this.vnfState, vnfInstanceInstantiatedVnfInfo.vnfState) &&
        Objects.equals(this.scaleStatus, vnfInstanceInstantiatedVnfInfo.scaleStatus) &&
        Objects.equals(this.extCpInfo, vnfInstanceInstantiatedVnfInfo.extCpInfo) &&
        Objects.equals(this.extVirtualLinkInfo, vnfInstanceInstantiatedVnfInfo.extVirtualLinkInfo) &&
        Objects.equals(this.extManagedVirtualLinkInfo, vnfInstanceInstantiatedVnfInfo.extManagedVirtualLinkInfo) &&
        Objects.equals(this.monitoringParameters, vnfInstanceInstantiatedVnfInfo.monitoringParameters) &&
        Objects.equals(this.localizationLanguage, vnfInstanceInstantiatedVnfInfo.localizationLanguage) &&
        Objects.equals(this.vnfcResourceInfo, vnfInstanceInstantiatedVnfInfo.vnfcResourceInfo) &&
        Objects.equals(this.virtualLinkResourceInfo, vnfInstanceInstantiatedVnfInfo.virtualLinkResourceInfo) &&
        Objects.equals(this.virtualStorageResourceInfo, vnfInstanceInstantiatedVnfInfo.virtualStorageResourceInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(flavourId, vnfState, scaleStatus, extCpInfo, extVirtualLinkInfo, extManagedVirtualLinkInfo, monitoringParameters, localizationLanguage, vnfcResourceInfo, virtualLinkResourceInfo, virtualStorageResourceInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VnfInstanceInstantiatedVnfInfo {\n");
    
    sb.append("    flavourId: ").append(toIndentedString(flavourId)).append("\n");
    sb.append("    vnfState: ").append(toIndentedString(vnfState)).append("\n");
    sb.append("    scaleStatus: ").append(toIndentedString(scaleStatus)).append("\n");
    sb.append("    extCpInfo: ").append(toIndentedString(extCpInfo)).append("\n");
    sb.append("    extVirtualLinkInfo: ").append(toIndentedString(extVirtualLinkInfo)).append("\n");
    sb.append("    extManagedVirtualLinkInfo: ").append(toIndentedString(extManagedVirtualLinkInfo)).append("\n");
    sb.append("    monitoringParameters: ").append(toIndentedString(monitoringParameters)).append("\n");
    sb.append("    localizationLanguage: ").append(toIndentedString(localizationLanguage)).append("\n");
    sb.append("    vnfcResourceInfo: ").append(toIndentedString(vnfcResourceInfo)).append("\n");
    sb.append("    virtualLinkResourceInfo: ").append(toIndentedString(virtualLinkResourceInfo)).append("\n");
    sb.append("    virtualStorageResourceInfo: ").append(toIndentedString(virtualStorageResourceInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

