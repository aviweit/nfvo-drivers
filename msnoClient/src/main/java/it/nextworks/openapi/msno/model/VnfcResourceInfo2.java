/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.nextworks.openapi.msno.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import it.nextworks.openapi.msno.model.KeyValuePairs;
import it.nextworks.openapi.msno.model.ResourceHandle;
import it.nextworks.openapi.msno.model.VnfcResourceInfo2VnfcCpInfo;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * This type represents the information on virtualised compute and storage resources used by a VNFC in a VNF instance. 
 */
@ApiModel(description = "This type represents the information on virtualised compute and storage resources used by a VNFC in a VNF instance. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-08T16:52:33.422+01:00")
public class VnfcResourceInfo2 {
  @SerializedName("id")
  private String id = null;

  @SerializedName("vduId")
  private String vduId = null;

  @SerializedName("computeResource")
  private ResourceHandle computeResource = null;

  @SerializedName("storageResourceIds")
  private List<String> storageResourceIds = null;

  @SerializedName("reservationId")
  private String reservationId = null;

  @SerializedName("vnfcCpInfo")
  private List<VnfcResourceInfo2VnfcCpInfo> vnfcCpInfo = null;

  @SerializedName("metadata")
  private KeyValuePairs metadata = null;

  public VnfcResourceInfo2 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of this VnfcResourceInfo instance. 
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Identifier of this VnfcResourceInfo instance. ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public VnfcResourceInfo2 vduId(String vduId) {
    this.vduId = vduId;
    return this;
  }

   /**
   * Reference to the applicable VDU in the VNFD. 
   * @return vduId
  **/
  @ApiModelProperty(required = true, value = "Reference to the applicable VDU in the VNFD. ")
  public String getVduId() {
    return vduId;
  }

  public void setVduId(String vduId) {
    this.vduId = vduId;
  }

  public VnfcResourceInfo2 computeResource(ResourceHandle computeResource) {
    this.computeResource = computeResource;
    return this;
  }

   /**
   * Reference to the VirtualCompute resource. 
   * @return computeResource
  **/
  @ApiModelProperty(required = true, value = "Reference to the VirtualCompute resource. ")
  public ResourceHandle getComputeResource() {
    return computeResource;
  }

  public void setComputeResource(ResourceHandle computeResource) {
    this.computeResource = computeResource;
  }

  public VnfcResourceInfo2 storageResourceIds(List<String> storageResourceIds) {
    this.storageResourceIds = storageResourceIds;
    return this;
  }

  public VnfcResourceInfo2 addStorageResourceIdsItem(String storageResourceIdsItem) {
    if (this.storageResourceIds == null) {
      this.storageResourceIds = new ArrayList<String>();
    }
    this.storageResourceIds.add(storageResourceIdsItem);
    return this;
  }

   /**
   * References to the VirtualStorage resources. The value refers to a VirtualStorageResourceInfo item in the VnfInstance. 
   * @return storageResourceIds
  **/
  @ApiModelProperty(value = "References to the VirtualStorage resources. The value refers to a VirtualStorageResourceInfo item in the VnfInstance. ")
  public List<String> getStorageResourceIds() {
    return storageResourceIds;
  }

  public void setStorageResourceIds(List<String> storageResourceIds) {
    this.storageResourceIds = storageResourceIds;
  }

  public VnfcResourceInfo2 reservationId(String reservationId) {
    this.reservationId = reservationId;
    return this;
  }

   /**
   * The reservation identifier applicable to the resource. It shall be present when an applicable reservation exists. 
   * @return reservationId
  **/
  @ApiModelProperty(value = "The reservation identifier applicable to the resource. It shall be present when an applicable reservation exists. ")
  public String getReservationId() {
    return reservationId;
  }

  public void setReservationId(String reservationId) {
    this.reservationId = reservationId;
  }

  public VnfcResourceInfo2 vnfcCpInfo(List<VnfcResourceInfo2VnfcCpInfo> vnfcCpInfo) {
    this.vnfcCpInfo = vnfcCpInfo;
    return this;
  }

  public VnfcResourceInfo2 addVnfcCpInfoItem(VnfcResourceInfo2VnfcCpInfo vnfcCpInfoItem) {
    if (this.vnfcCpInfo == null) {
      this.vnfcCpInfo = new ArrayList<VnfcResourceInfo2VnfcCpInfo>();
    }
    this.vnfcCpInfo.add(vnfcCpInfoItem);
    return this;
  }

   /**
   * CPs of the VNFC instance. Shall be present when that particular CP of the VNFC instance is associated to an external CP of the VNF instance. May be present otherwise. 
   * @return vnfcCpInfo
  **/
  @ApiModelProperty(value = "CPs of the VNFC instance. Shall be present when that particular CP of the VNFC instance is associated to an external CP of the VNF instance. May be present otherwise. ")
  public List<VnfcResourceInfo2VnfcCpInfo> getVnfcCpInfo() {
    return vnfcCpInfo;
  }

  public void setVnfcCpInfo(List<VnfcResourceInfo2VnfcCpInfo> vnfcCpInfo) {
    this.vnfcCpInfo = vnfcCpInfo;
  }

  public VnfcResourceInfo2 metadata(KeyValuePairs metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Metadata about this resource. 
   * @return metadata
  **/
  @ApiModelProperty(value = "Metadata about this resource. ")
  public KeyValuePairs getMetadata() {
    return metadata;
  }

  public void setMetadata(KeyValuePairs metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VnfcResourceInfo2 vnfcResourceInfo2 = (VnfcResourceInfo2) o;
    return Objects.equals(this.id, vnfcResourceInfo2.id) &&
        Objects.equals(this.vduId, vnfcResourceInfo2.vduId) &&
        Objects.equals(this.computeResource, vnfcResourceInfo2.computeResource) &&
        Objects.equals(this.storageResourceIds, vnfcResourceInfo2.storageResourceIds) &&
        Objects.equals(this.reservationId, vnfcResourceInfo2.reservationId) &&
        Objects.equals(this.vnfcCpInfo, vnfcResourceInfo2.vnfcCpInfo) &&
        Objects.equals(this.metadata, vnfcResourceInfo2.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, vduId, computeResource, storageResourceIds, reservationId, vnfcCpInfo, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VnfcResourceInfo2 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    vduId: ").append(toIndentedString(vduId)).append("\n");
    sb.append("    computeResource: ").append(toIndentedString(computeResource)).append("\n");
    sb.append("    storageResourceIds: ").append(toIndentedString(storageResourceIds)).append("\n");
    sb.append("    reservationId: ").append(toIndentedString(reservationId)).append("\n");
    sb.append("    vnfcCpInfo: ").append(toIndentedString(vnfcCpInfo)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

